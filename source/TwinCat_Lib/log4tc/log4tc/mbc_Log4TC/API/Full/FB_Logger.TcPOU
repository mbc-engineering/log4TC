<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.0">
  <POU Name="FB_Logger" Id="{50b11db4-e622-4fbf-aac9-873d9c447954}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'reflection'} 
FUNCTION_BLOCK FB_Logger
VAR_INPUT
	bExecute		: BOOL := TRUE;
	eLogLevel		: E_LogLevel;
	sMessage		: Tc2_System.T_MaxString;
	stArg1			: T_Arg := Tc2_Utilities.EMPTY_ARG_VALUE;
	stArg2			: T_Arg := Tc2_Utilities.EMPTY_ARG_VALUE;
	stArg3			: T_Arg := Tc2_Utilities.EMPTY_ARG_VALUE;
	stArg4			: T_Arg := Tc2_Utilities.EMPTY_ARG_VALUE;
	stArg5			: T_Arg := Tc2_Utilities.EMPTY_ARG_VALUE;	
	stArg6			: T_Arg := Tc2_Utilities.EMPTY_ARG_VALUE;	
	stArg7			: T_Arg := Tc2_Utilities.EMPTY_ARG_VALUE;	
	stArg8			: T_Arg := Tc2_Utilities.EMPTY_ARG_VALUE;	
	stArg9			: T_Arg := Tc2_Utilities.EMPTY_ARG_VALUE;	
	stArg10			: T_Arg := Tc2_Utilities.EMPTY_ARG_VALUE;	
	iContextBuilder	: I_ContextBuilder := 0;	
END_VAR
VAR
    {attribute 'instance-path'} 
    {attribute 'noinit'} // 'log4tc.log4Tc_Tester.MAIN.fbLog' bwz. 'log4tc.log4Tc_Tester.GVL.fbLog'
    sInstancePath	: T_MaxString; 	
	sLogger			: T_MaxString;
	fbLoggerContext	: FB_ContextBuilder;
END_VAR
VAR_TEMP
	fbLogEntry		: FB_LogEntry();
	fbSysTime		: Tc2_System.GETSYSTEMTIME;
	nTimestamp		: LINT;
	pBuffer			: PVOID;
	nBufferCount	: UINT;
	iLogEntryAdder	: I_LogEntryAdder;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bExecute THEN
	
	fbLogEntry.Start(
		pLogger		:= ADR(sLogger),
		pMessage 	:= ADR(sMessage),
		eLogLevel	:= eLogLevel,
		nTimeStampPlc := nTimestamp,
		nTimeStampClock := 0
	);
	
	fbLogEntry.AddTArg(1, stArg1);
	fbLogEntry.AddTArg(2, stArg2);
	fbLogEntry.AddTArg(3, stArg3);
	fbLogEntry.AddTArg(4, stArg4);
	fbLogEntry.AddTArg(5, stArg5);
	fbLogEntry.AddTArg(6, stArg6);
	fbLogEntry.AddTArg(7, stArg7);
	fbLogEntry.AddTArg(8, stArg8);
	fbLogEntry.AddTArg(9, stArg9);
	fbLogEntry.AddTArg(10, stArg10);
	
	//IF __QUERYINTERFACE(F_GetTaskContext(), iLogEntryAdder) THEN
		//iLogEntryAdder.AddToLogEntry(fbLogEntry);
	//END_IF
	
	fbLoggerContext.AddToLogEntry(E_Scope.eLogger, fbLogEntry);
	
	IF iContextBuilder <> 0 AND __QUERYINTERFACE(iContextBuilder, iLogEntryAdder) THEN
		iLogEntryAdder.AddToLogEntry(E_Scope.eLog, fbLogEntry);
	END_IF
	
	// TODO instance path
	
	IF fbLogEntry.End() THEN
		// Add to buffer
		fbLogEntry.GetBuffer(
			pBuffer			=> pBuffer,
			nBufferCount	=> nBufferCount
		);
		PRG_TaskLog.TaskLogger.AddLog(pBuffer, nBufferCount);
	END_IF
END_IF

// reset arguments to default values
bExecute := TRUE;
stArg1 := Tc2_Utilities.EMPTY_ARG_VALUE;
stArg2 := Tc2_Utilities.EMPTY_ARG_VALUE;
stArg3 := Tc2_Utilities.EMPTY_ARG_VALUE;
stArg4 := Tc2_Utilities.EMPTY_ARG_VALUE;
stArg5 := Tc2_Utilities.EMPTY_ARG_VALUE;
stArg6 := Tc2_Utilities.EMPTY_ARG_VALUE;
stArg7 := Tc2_Utilities.EMPTY_ARG_VALUE;
stArg8 := Tc2_Utilities.EMPTY_ARG_VALUE;
stArg9 := Tc2_Utilities.EMPTY_ARG_VALUE;
stArg10 := Tc2_Utilities.EMPTY_ARG_VALUE;
iContextBuilder := 0;


]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{4f993583-02a7-4efe-804b-13cea4cdd5af}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	sLogger		: T_MaxString;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.sLogger := sLogger;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="LoggerContext" Id="{6edca1ac-6992-4eed-9259-16ec1f6c2111}">
      <Declaration><![CDATA[PROPERTY PUBLIC LoggerContext : I_ContextBuilder]]></Declaration>
      <Get Name="Get" Id="{939d1d29-6449-4f5b-95f5-2539d372fa5c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[LoggerContext := fbLoggerContext;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <ObjectProperties>
      <XmlArchive>
        <Data>
          <o xml:space="preserve" t="LicenseProperty">
            <l2 n="Licenses" />
          </o>
        </Data>
        <TypeList>
          <Type n="LicenseProperty">{ec6b18ef-cd41-4646-b1b3-985c60f930b9}</Type>
        </TypeList>
      </XmlArchive>
    </ObjectProperties>
    <LineIds Name="FB_Logger">
      <LineId Id="3" Count="57" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Logger.FB_init">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Logger.LoggerContext.Get">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>