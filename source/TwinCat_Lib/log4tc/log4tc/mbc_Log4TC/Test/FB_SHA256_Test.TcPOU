<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.0">
  <POU Name="FB_SHA256_Test" Id="{58c5a6ac-b999-4174-8256-58a6ee9d5aad}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK INTERNAL FB_SHA256_Test EXTENDS TcUnit.FB_TestSuite

]]></Declaration>
    <Implementation>
      <ST><![CDATA[Hash_one_block();
Hash_two_block();
Hash_empty();
]]></ST>
    </Implementation>
    <Method Name="Hash_empty" Id="{f9760150-26e5-4c1a-8fe9-c2327a618c91}">
      <Declaration><![CDATA[METHOD PRIVATE Hash_empty
VAR CONSTANT
	aInput		: STRING := '';
	aExpected	: ARRAY[0..31] OF BYTE := [
					16#E3, 16#B0, 16#C4, 16#42, 16#98, 16#FC, 16#1C, 16#14, 16#9A, 16#FB, 
					16#F4, 16#C8, 16#99, 16#6F, 16#B9, 16#24, 16#27, 16#AE, 16#41, 16#E4,
					16#64, 16#9B, 16#93, 16#4C, 16#A4, 16#95, 16#99, 16#1B, 16#78, 16#52,
					16#B8, 16#55
					];
END_VAR
VAR
	fbSha256	: FB_SHA256;
	aOutput		: ARRAY[0..31] OF BYTE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TcUnit.TEST('Hash_empty');

aOutput := fbSha256.Hash(ADR(aInput), INT_TO_UDINT(LEN(aInput)));

AssertArrayEquals_BYTE(aExpected, aOutput, 'Hash');

TcUnit.TEST_FINISHED();

]]></ST>
      </Implementation>
    </Method>
    <Method Name="Hash_one_block" Id="{5ca904da-8db7-4845-8540-8e591e9fa6d4}">
      <Declaration><![CDATA[METHOD PRIVATE Hash_one_block
VAR CONSTANT
	aInput		: STRING := 'abc';
	aExpected	: ARRAY[0..31] OF BYTE := [
					16#BA, 16#78, 16#16, 16#BF, 16#8F, 16#01, 16#CF, 16#EA, 16#41, 16#41, 16#40, 16#DE, 16#5D, 16#AE, 16#22, 16#23,
					16#B0, 16#03, 16#61, 16#A3, 16#96, 16#17, 16#7A, 16#9C, 16#B4, 16#10, 16#FF, 16#61, 16#F2, 16#00, 16#15, 16#AD
					];	
END_VAR
VAR
	fbSha256	: FB_SHA256;
	aOutput		: ARRAY[0..31] OF BYTE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TcUnit.TEST('Hash_one_block');

aOutput := fbSha256.Hash(ADR(aInput), INT_TO_UDINT(LEN(aInput)));

AssertArrayEquals_BYTE(aExpected, aOutput, 'Hash');

TcUnit.TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Hash_two_block" Id="{39f6afa1-0196-4fec-b690-ad4db674e330}">
      <Declaration><![CDATA[METHOD PRIVATE Hash_two_block
VAR CONSTANT
	aInput		: STRING := 'abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq';
	aExpected	: ARRAY[0..31] OF BYTE := [
					16#24, 16#8D, 16#6A, 16#61, 16#D2, 16#06, 16#38, 16#B8, 16#E5, 16#C0, 16#26, 16#93, 16#0C, 16#3E, 16#60, 16#39,
					16#A3, 16#3C, 16#E4, 16#59, 16#64, 16#FF, 16#21, 16#67, 16#F6, 16#EC, 16#ED, 16#D4, 16#19, 16#DB, 16#06, 16#C1
					];	
END_VAR
VAR
	fbSha256	: FB_SHA256;
	aOutput		: ARRAY[0..31] OF BYTE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TcUnit.TEST('Hash_two_block');

aOutput := fbSha256.Hash(ADR(aInput), INT_TO_UDINT(LEN(aInput)));

AssertArrayEquals_BYTE(aExpected, aOutput, 'Hash');

TcUnit.TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>